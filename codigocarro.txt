#include <AFMotor.h>         
#include <Servo.h>          
 

AF_DCMotor motor1(1); 
AF_DCMotor motor2(2); 
AF_DCMotor motor3(3); 
AF_DCMotor motor4(4); 
 

#define   serv        10                 
#define   trig        A4                
#define   echo        A5                 

float measureDistance();               
void trigPulse();                       
void decision();                        
void robot_forward(unsigned char v);    
void robot_backward(unsigned char v);  
void robot_left(unsigned char v);       
void robot_right(unsigned char v);      
void robot_stop(unsigned char v);       
 

Servo servo1;                         
 

unsigned char velocidade = 0x00;       
float dist_cm;                        
float dist_right;                     
float dist_left;                       
          

void setup()
{
  
 pinMode(trig, OUTPUT);                       
 pinMode(serv, OUTPUT);                       
 pinMode(echo, INPUT);  
                      
 servo1.attach(serv);                         
 digitalWrite(trig, LOW);                    
 servo1.write(80);                            
 delay(500);                                  
  velocidade = 0xFF; 
} //end setup
 

void loop()
{
     robot_forward(velocidade);
     delay(80);
     dist_cm = measureDistance();
     if(dist_cm < 20) 
     {
         decision();
     }
} //end loop
 

 
float measureDistance()                       
{
  float pulse;                                
  trigPulse();                                
  pulse = pulseIn(echo, HIGH);                
   
  return (pulse/58.82);                      
} //end measureDistante
 
void trigPulse()                             
{
   digitalWrite(trig,HIGH);                
   delayMicroseconds(10);                  
   digitalWrite(trig,LOW);                  
} //end trigPulse
 
void decision()                              
{
   robot_stop(velocidade);                   
   delay(500);                               
   servo1.write(0);                          
   delay(500);                             
   dist_right = measureDistance();           
   delay(2000);                              
   servo1.write(175);                        
   delay(500);                              
   dist_left = measureDistance();            
   delay(2000);                               
   servo1.write(80);                         
   delay(500);
   if(dist_right > dist_left)                
   {                                         
      robot_backward(velocidade);            
      delay(600);                           
      robot_right(velocidade);               
      delay(2000);                          
      robot_forward(velocidade);             
   } //end if
   else                                     
   {
    robot_backward(velocidade);           
      delay(600);                            
      robot_left(velocidade);               
      delay(2000);                            
      robot_forward(velocidade);             
   } //end else
 
} //end decision
  
void robot_forward(unsigned char v)
{
     motor1.setSpeed(v);
     motor1.run(FORWARD);
     motor2.setSpeed(v);
     motor2.run(FORWARD);
     motor3.setSpeed(v);
     motor3.run(FORWARD);
     motor4.setSpeed(v);
     motor4.run(FORWARD);
} //end robot forward
 
void robot_backward(unsigned char v)
{
     motor1.setSpeed(v);
     motor1.run(BACKWARD);
     motor2.setSpeed(v);
     motor2.run(BACKWARD);
     motor3.setSpeed(v);
     motor3.run(BACKWARD);
     motor4.setSpeed(v);
     motor4.run(BACKWARD);
} //end robot backward
 
void robot_left(unsigned char v)
{
     motor1.setSpeed(v);
     motor1.run(FORWARD);
     motor2.setSpeed(v);
     motor2.run(FORWARD);
     motor3.setSpeed(v);
     motor3.run(BACKWARD);
     motor4.setSpeed(v);
     motor4.run(BACKWARD);
} //end robot left
 
void robot_right(unsigned char v)
{
     motor1.setSpeed(v);
     motor1.run(BACKWARD);
     motor2.setSpeed(v);
     motor2.run(BACKWARD);
     motor3.setSpeed(v);
     motor3.run(FORWARD);
     motor4.setSpeed(v);
     motor4.run(FORWARD);
} //end robot right
 
void robot_stop(unsigned char v)
{
     motor1.setSpeed(v);
     motor1.run(RELEASE);
     motor2.setSpeed(v);
     motor2.run(RELEASE);
     motor3.setSpeed(v);
     motor3.run(RELEASE);
     motor4.setSpeed(v);
     motor4.run(RELEASE);
} //end robot stop